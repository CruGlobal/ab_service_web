{"version":3,"file":"AB.6b09f94e763656d1e218.js","mappings":"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BAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEGhC,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGpC,OAAQ,WAEL,OAAIhD,OAAOqF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC1uBN,MAAMC,EACHtT,YAAYS,GACTP,KAAKO,GAAKA,EACVP,KAAKqT,OAAS,EACjB,CAEAC,SAAS7H,EAAM/H,GACZ1D,KAAKqT,OAAOnM,KAAK,CAAEuE,KA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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-ps\": 68634,\n\t\"./ar-ps.js\": 68634,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku-kmr\": 36063,\n\t\"./ku-kmr.js\": 36063,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      console.warn(`socket: ${key} ${obj.label ?? obj.name}(${length})`, data);\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // filter condition before add\n                        if (!this.isValidData(updatedV)) return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink.fieldLink.relationName();\n                     let valuesToAdd = {};\n                     let valuesIn = linkCursor[colName] || [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         if (condKey == \"is_current_date\") {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"none\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         } else {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"datepicker\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         }\n      }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         let now = new Date();\n         let year = now.getFullYear();\n         let month = now.getMonth();\n         let date = now.getDate();\n\n         let startOfDay = new Date(year, month, date, 0, 0, 0);\n         let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n         // Convert to UTC by subtracting the timezone offset\n         let startOfDayUTC = new Date(\n            startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n         );\n         let endOfDayUTC = new Date(\n            endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n         );\n         let formatDate = (date) => {\n            let isoString = date.toISOString();\n            return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n         };\n         cond.value = formatDate(startOfDayUTC).concat(\n            \"|\",\n            formatDate(endOfDayUTC)\n         );\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (field && (field.key === \"date\" || field.key === \"datetime\"))\n                  return field.exportValue(new Date(v));\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if we pass new wheres with a reload use them instead\n                  if (dc.__reloadWheres) {\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","performance","op","normalizeData","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","definitionDestroy","definitionUpdate","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","newInstance","RecordRule","_recordRule","formLoad","fromSettings","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","now","startOfDay","endOfDay","startOfDayUTC","getTimezoneOffset","endOfDayUTC","formatDate","isoString","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","deleteData","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","showPage","fileBlob","_toBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}