{"version":3,"file":"402.eb7570533251004bcaf0.js","mappings":"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,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBlb,gBAAiB,IACjBmb,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGxb,OAAQ,WAEL,OAAIsX,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCruBN,MAAMC,EACHje,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAK6d,OAAS,EACjB,CAEAC,SAAS3W,EAAMmK,GACZtR,KAAK6d,OAAOvZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAyM,OACG,OAA6B,GAAtB/d,KAAK6d,OAAO1X,MACtB,CAEAqB,OACG,OAAOxH,KAAK6d,OAAO1X,OAAS,CAC/B,CAEA6X,qBACG,IAAIhG,EAAM,CACPzI,MAAO,eACP0O,kBAAmB,CAAC,GAGnBC,EAAOlG,EAAIiG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","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        console.log(`${jobID} : ${ev}:normalization begin`);\n                        let timeFrom = performance.now();\n                        model.normalizeData(data.data);\n                        let timeTo = performance.now();\n                        console.log(\n                           `${jobID} : ${ev}:normalization end:  ${\n                              timeTo - timeFrom\n                           }ms`\n                        );\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as Sentry from \"@sentry/browser\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.min.js\";\n// NOTE: moved to require() because using import with webix.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      const scope = new Sentry.Scope();\n      // Mark builder alerts as lower level in sentry\n      if (domain == \"builder\") scope.setLevel(\"warning\");\n      scope.setTag(\"domain\", domain);\n      scope.setContext(\"info\", info);\n      Sentry.captureException(error, scope);\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.isCursorFollow && this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     f.settings.isCustomFK &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource))\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(f);\n\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         console.log(`${jobID} : normalization begin`);\n         let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         let timeTo = performance.now();\n         console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n   }\n\n   onShow() {\n      super.onShow();\n\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth();\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth() {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 18 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template = `<div class=\"customField ${\n         formSettings.labelPosition\n      }\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: this.new_width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            height: settings.height,\n            fields: this._getFields(),\n            structure: settings.structure ?? undefined,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces ?? 2;\n\n               return value && value != \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n            override: new Map([\n               [\n                  pivot.services.Backend,\n                  class MyBackend extends pivot.services.Backend {\n                     async data() {\n                        const dc = self.datacollection;\n                        if (!dc) return webix.promise.resolve([]);\n\n                        const object = dc.datasource;\n                        if (!object) return webix.promise.resolve([]);\n\n                        switch (dc.dataStatus) {\n                           case dc.dataStatusFlag.notInitial:\n                              await dc.loadData();\n                              break;\n                        }\n\n                        const data = dc.getData();\n                        const dataMapped = data.map((d) => {\n                           const result = {};\n\n                           object.fields().forEach((f) => {\n                              if (\n                                 f instanceof ABFieldCalculate ||\n                                 f instanceof ABFieldFormula ||\n                                 f instanceof ABFieldNumber\n                              )\n                                 result[f.columnName] = d[f.columnName];\n                              else result[f.columnName] = f.format(d);\n                           });\n\n                           return result;\n                        });\n\n                        return webix.promise.resolve(dataMapped);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   async onShow() {\n      super.onShow();\n\n      this.__isShowing = true;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        if (\n                           self.__isShowing &&\n                           dcCalendar.dataStatus ===\n                              dcCalendar.dataStatusFlag.notInitial\n                        )\n                           // load data when a widget is showing\n                           await dcCalendar.loadData();\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        if (\n                           self.__isShowing &&\n                           dc.dataStatus === dc.dataStatusFlag.notInitial\n                        )\n                           // load data when a widget is showing\n                           await dc.loadData();\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      this.__isShowing = true;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.dbTableName()}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","timeFrom","performance","now","normalizeData","timeTo","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","scope","setLevel","setTag","setContext","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","followDC","datacollectionFollow","loadData","waitForDataCollectionToInitialize","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","followCursor","unshift","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","op","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","match","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","readonly","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","_getFields","dataMapped","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","ref","reportData","reportRow","$pk","rField","milliSeconds","__isShowing","interval","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}