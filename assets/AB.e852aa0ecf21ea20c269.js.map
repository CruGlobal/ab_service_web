{"version":3,"file":"AB.e852aa0ecf21ea20c269.js","mappings":"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kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,c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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      console.warn(`socket: ${key} ${obj.label ?? obj.name}(${length})`, data);\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // filter condition before add\n                        if (!this.isValidData(updatedV)) return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink.fieldLink.relationName();\n                     let valuesToAdd = {};\n                     let valuesIn = linkCursor[colName] || [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         if (condKey == \"is_current_date\") {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"none\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         } else {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"datepicker\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         }\n      }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         let now = new Date();\n         let year = now.getFullYear();\n         let month = now.getMonth();\n         let date = now.getDate();\n\n         let startOfDay = new Date(year, month, date, 0, 0, 0);\n         let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n         // Convert to UTC by subtracting the timezone offset\n         let startOfDayUTC = new Date(\n            startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n         );\n         let endOfDayUTC = new Date(\n            endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n         );\n         let formatDate = (date) => {\n            let isoString = date.toISOString();\n            return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n         };\n         cond.value = formatDate(startOfDayUTC).concat(\n            \"|\",\n            formatDate(endOfDayUTC)\n         );\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (field && (field.key === \"date\" || field.key === \"datetime\"))\n                  return field.exportValue(new Date(v));\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","now","startOfDay","endOfDay","startOfDayUTC","getTimezoneOffset","endOfDayUTC","formatDate","isoString","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","A","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}